#!/bin/bash

# status script for dwm

#	1 = normal
#	2 = selected
#	3 = warning
#	4 = error
#	5 = info
#	6 = ok

getdotstr(){
	RES_LENGTH=$(expr length ${1})
	if [ "$RES_LENGTH" -eq 1 ];then
	DOT_STR="..."
	elif [ "$RES_LENGTH" -eq 2 ];then
	DOT_STR=".."
	else
	DOT_STR="."
	fi
}

bat(){
	BAT_INFO=$(acpi -b)

	BAT_STATE=$(echo $BAT_INFO | awk '{print $3}' | sed 's/\,//')
	BAT_PCT=$(echo $BAT_INFO | awk '{print $4}' | sed 's/\(\%\|\,\)//g')
	BAT_HOUR=$(echo $BAT_INFO | awk '{print $5}' | sed 's/\([0-9]\{2\}\).*/\1/')
	BAT_MINUTE=$(echo $BAT_INFO | awk '{print $5}' | sed 's/[0-9]\{2\}\:\([0-9]\{2\}\).*/\1/')

	if [ -z "$BAT_HOUR" ]; then
		BAT_HOUR="--"
	fi

	if [ -z "$BAT_MINUTE" ]; then
		BAT_MINUTE="--"
	fi

	getdotstr $BAT_PCT

	case "$BAT_STATE" in
		Discharging)
			if [ $BAT_PCT -ge 40 ]; then
				echo -e " \x05\xE2\x88\x85\x01$DOT_STR\x05\x06$BAT_PCT%\x01.\x05$BAT_HOUR:$BAT_MINUTE "
			elif [ $BAT_PCT -ge 10 ]; then
				echo -e " \x05\xE2\x88\x85\x01$DOT_STR\x05\x03$BAT_PCT%\x01.\x05$BAT_HOUR:$BAT_MINUTE "
			else
				echo -e "\x04 \xE2\x88\x85$DOT_STR$BAT_PCT%.$BAT_HOUR:$BAT_MINUTE \x01"
			fi
			;;
		Charging)
			echo -e " \x05\xE2\x88\x85\x01$DOT_STR\x05$BAT_PCT%\x01.\x05$BAT_HOUR\xE2\x86\x91$BAT_MINUTE "
			;;
		Full)
			echo -e " \x05\xE2\x88\x85\x01$DOT_STR\x05$BAT_PCT%\x01.\x05$BAT_HOUR:$BAT_MINUTE "
			;;
		*)
			;;
	esac
}

#mem(){
#mem="$(awk '/^-/ {print $3}' <(free -m))"
#echo -e "\x04\x01 $mem"
#}

#cpu(){
#    read cpu a b c previdle rest < /proc/stat
#    prevtotal=$((a+b+c+previdle))
#    sleep 0.5
#    read cpu a b c idle rest < /proc/stat
#    total=$((a+b+c+idle))
#    cpu="$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal)))%"
#    echo -e "\x05\x01 $cpu"
#}

#vol(){
#        vol="$(ponymix get-volume)"
#        if ponymix is-muted; then
#echo -e "\x03\x01"
#        else
#echo -e "\x04\x01 $vol%"
#        fi
#}

dte(){
	echo -e " \x05$(date +'%a\x01.\x05%d\x01.\x05%b\x01.\x05%H:%M' | tr '[A-Z]' '[a-z]') "
}

# pipe to status bar
xsetroot -name "$(bat)$(dte)"
